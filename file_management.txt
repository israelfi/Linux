# Para se referenciar à arquivos na linha de comando, podemos usar os caractéres * e ?. * significa qualquer número de caractéres, incluindo nenhum. ? siginifica qualquer caractére (no caso, apenas um).

mv *.mp3 ~/music		# Move todos os arquivos com a extensão .mp3 do diretório atual para a pasta ~/music

mv ???.mp3 ~/music		# Move todo os arquivos com a extensão .mp3 que apresentam três caractéres no nome para a pasta ~/music

# [...] permite procurar por caractéres esecíficos. *.mp[34] pode ser qualquer arquivo com a extensão .mp3 ou .mp4

# O comando which permite saber qual o diretório do programa sendo executado

which ls			# Fala qual o diretório de ls

# O comando find é usado para procurar arquivos no computador

find . -name "*.mp3"		# Irá mostrar todos os arquivos .mp3 no diretório atual (pode-se trocar . por qualquer diretório desejado)

# O parâmetro -name faz com que a busca seja baseada no nome do arquivo

# É possível procurar somente por arquivos e não diretórios e vice-versa com a opção -type. -type f (arquivos/files) e -type d (diretórios)

find . -type f -name "*user*"	# Mostra todos os arquivos que contém a string "user" no seu nome

find . -type f -size +100M	# Procura por arquivos com pelo menos 100 megas de tamanho

find . -size +100M -exec ls -lh {} \; # A opção -exec diz para find executar um certo comando para cada resultado, trocando {} pelo nome do arquivo. \; informa que o fim do comando a ser executado.

ls -l				# Mostra as permições dos arquivos para cada grupo no sistema. Há três permissões: leitura (r), escritura (w) e execução (x)

# As permisões são mostradas na ordem: user (u), group (g) e outhers (o).

chmod a+x arquivo		# Adiciona (+) permissão de execução (x) para todos (a) para arquivo

chmod g-x arquivo		# Remove (-) permissão de execução (x) para group (g)

chmod go+w arquivo		# Adiciona (+) permissão de escritura (w) para group e others (go)

chmod 777 arquivo		# Todos os três não têm nenhuma restrição

chmod 700 arquivo		# O propietário do arquivo não tem restrição

chmod 666 arquivo		# Todos usuários podem ler e escrever

chmod a=rw arquivo		# Igual à linha de cima

rm -r folder			# rm -r remove diretórios não vazios. Isso faz com que todos os arquivos e pastas dentro de folder sejam deletados assim como folder

rm -f(--force) folder		# Deletamento "forçado", não recomendado

# Há três opções para se usar com rm: -f, -r e -v

rm -f folder			# Igonora arquivos não exitentes

rm -r folder			# Remoção recursiva

rm -v folder			# Explica o que está sendo feito

touch arquivo			# Altera a data de modificação de arquivo para o momento que o comando foi executado

touch -d "2 hours ago" arquivo	# Configura o arquivo como se tivesse sido modificado duas horas atrás

touch -d "$(date -r file) - 2 hours" file	# Modifica a data de file relativo a modificação atual

# O comando fold permite quebrar as linhas de um texto para um determinado tamanho

fold arquivo			# Quebra de linha a cada 80 caracteres (padrão)

fold -w25 arquivo		# Quebra de linha a cada 25 caractéres

# Um bom método para deletar todo o conteúdo de um arquivo é usando cat /dev/null

cat /dev/null > file		# Deleta o conteúdo de file e ainda preserva as pemissões do arquivo

cat file1 > file2		# file2 passa a ter exatamente o mesmo conteúdo de file1

# Uma maneira não muito boa de se "deletar" o conteúdo de um arquivo é com rm && touch

sudo rm file && touch file	# Remove file e cria um novo com o mesmo nome
